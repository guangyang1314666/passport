<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.guangyang.development</groupId>
    <artifactId>parent</artifactId>
    <version>1.0</version>

    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <commons-lang3.version>3.7</commons-lang3.version>
        <mybatis.version>2.1.1</mybatis.version>
        <druid-version>1.1.21</druid-version>
        <fastjson.version>1.2.46</fastjson.version>
        <dubbo.version>2.6.9</dubbo.version>
        <zkclient.version>0.10</zkclient.version>
        <dubbo-starter.version>0.2.1.RELEASE</dubbo-starter.version>
        <curator-framework-version>2.12.0</curator-framework-version>
        <google.guava.version>21.0</google.guava.version>
        <github.pagehelper-version>4.1.0</github.pagehelper-version>
        <jedis.version>2.9.0</jedis.version>
        <redisson.version>3.10.5</redisson.version>
        <fastjson.version>1.2.46</fastjson.version>

        <httpclient-version>4.5.5</httpclient-version>
        <httpmime-version>4.5.2</httpmime-version>
        <commons-lang3.version>3.7</commons-lang3.version>
        <!--        <commons-logging-version>1.1.1</commons-logging-version>-->
        <!--        <httpcore-version>4.4.12</httpcore-version>-->
        <commons-beanutils-version>1.9.3</commons-beanutils-version>
        <persistence-api-version>1.0.2</persistence-api-version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--实体类注解依赖包,如果引入了通用mapper，依赖包，通用mapper中已经引入了该依赖-->
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>persistence-api</artifactId>
                <version>${persistence-api-version}</version>
            </dependency>


            <!--bean和map互转工具-->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils-version}</version>
            </dependency>

            <!--http工具类需要依赖的工具包-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>${httpmime-version}</version>
            </dependency>
            <!--            <dependency>-->
            <!--                <groupId>commons-codec</groupId>-->
            <!--                <artifactId>commons-codec</artifactId>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>commons-logging</groupId>-->
            <!--                <artifactId>commons-logging</artifactId>-->
            <!--                <version>${commons-logging-version}</version>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.apache.httpcomponents</groupId>-->
            <!--                <artifactId>httpcore</artifactId>-->
            <!--                <version>${httpcore-version}</version>-->
            <!--            </dependency>-->

            <!--
           commons-lang3是用于针对java.lang类中数据基本类型的处理工具包
           比如判断字符串是否为空if(StringUtils.isblank(s))
           -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>


            <!-- 分页插件依赖 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${github.pagehelper-version}</version>
            </dependency>


            <!--======================= 谷歌的驼峰转换工具类 =========================-->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google.guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!--
            commons-lang3是用于针对java.lang类中数据基本类型的处理工具包
            比如判断字符串是否为空if(StringUtils.isblank(s))
            -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <!-- 阿里巴巴数据库连接池: druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid-version}</version>
            </dependency>

            <!--===========================整合dubbo需要以下4个依赖==============================-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <!-- zookeeper的客户端jar依赖包 -->
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
            </dependency>
            <!-- Dubbo Spring Boot Starter -->
            <dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator-framework-version}</version>
            </dependency>
            
        </dependencies>
    </dependencyManagement>

</project>